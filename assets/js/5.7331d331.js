(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{319:function(t,e,r){"use strict";r.r(e);var a=r(8),v=Object(a.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"映射类型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#映射类型"}},[t._v("#")]),t._v(" 映射类型")]),t._v(" "),e("p",[e("code",[t._v("PartialType()")]),t._v("(部分声明): 函数返回一个类型（类），其中包含输入类型的所有属性，并都将其设置为可选。")]),t._v(" "),e("p",[t._v("当构建输入验证类型（也叫做数据传输对象或DTOs）时，在同一类型上构建create和update变体通常会很有用。")]),t._v(" "),e("p",[e("code",[t._v("PickType()")]),t._v("(拾取): 拾取部分类型")]),t._v(" "),e("p",[e("code",[t._v("OmitType()")]),t._v("(省略): 省略部分类型")]),t._v(" "),e("p",[e("code",[t._v("IntersectionType()")]),t._v(": IntersectionType()函数将两个类型组合为一个类型（类）")]),t._v(" "),e("h2",{attrs:{id:"控制器-controller"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#控制器-controller"}},[t._v("#")]),t._v(" 控制器 Controller")]),t._v(" "),e("h3",{attrs:{id:"装饰器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#装饰器"}},[t._v("#")]),t._v(" 装饰器")]),t._v(" "),e("p",[e("code",[t._v("@Param")]),t._v(": 获取地址栏中参数")]),t._v(" "),e("p",[e("code",[t._v("@Query")]),t._v(": 获取地址栏'？'后面参数")]),t._v(" "),e("p",[e("code",[t._v("@Body")]),t._v(": 获取Body中参数")]),t._v(" "),e("h2",{attrs:{id:"模块"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#模块"}},[t._v("#")]),t._v(" 模块")]),t._v(" "),e("h3",{attrs:{id:"module"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#module"}},[t._v("#")]),t._v(" @Module")]),t._v(" "),e("p",[t._v("@module() 装饰器接受一个描述模块属性的对象：")]),t._v(" "),e("p",[e("code",[t._v("imports")]),t._v(" ：导入其他模块中导出的Providers，以实现共享")]),t._v(" "),e("p",[e("code",[t._v("providers")]),t._v(" ：模块中所有用到的功能类，模块内共享实用；")]),t._v(" "),e("p",[e("code",[t._v("controllers")]),t._v("：控制器")]),t._v(" "),e("p",[e("code",[t._v("exports")]),t._v("：导出其他模块需要共享的Providers")]),t._v(" "),e("h2",{attrs:{id:"管道-pipe"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#管道-pipe"}},[t._v("#")]),t._v(" 管道 Pipe")]),t._v(" "),e("h3",{attrs:{id:"内置管道"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#内置管道"}},[t._v("#")]),t._v(" 内置管道")]),t._v(" "),e("p",[e("code",[t._v("ParseIntPipe")]),t._v(":")]),t._v(" "),e("h3",{attrs:{id:"自定义管道"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#自定义管道"}},[t._v("#")]),t._v(" 自定义管道")]),t._v(" "),e("h2",{attrs:{id:"repl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#repl"}},[t._v("#")]),t._v(" REPL")]),t._v(" "),e("p",[e("code",[t._v("REPL")]),t._v(" 是一个简单的交互式环境，它接受单个用户输入、执行它们并将结果返回给用户。REPL 功能让你可以直接从你的终端检查你的依赖图并调用你的提供器（和控制器）上的方法。")])])}),[],!1,null,null,null);e.default=v.exports}}]);